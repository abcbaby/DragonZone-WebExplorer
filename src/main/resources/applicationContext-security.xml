<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                                 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true">
		<intercept-url pattern="/terminal/*.jsf" access="ROLE_ADMIN,ROLE_CONTRIBUTOR" />
		<intercept-url pattern="/**/*.jsf" access="IS_AUTHENTICATED_FULLY" />
		<http-basic />
		<!-- <form-login login-page="/login" default-target-url="/welcome" authentication-failure-url="/login?error" 
			username-parameter="username" password-parameter="password" /> <logout logout-success-url="/login?logout" 
			/> -->
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<user-service>
				<user name="${account.admin.name}" password="${account.admin.password}"
					authorities="ROLE_ADMIN" />
				<user name="${account.contributor.name}" password="${account.contributor.password}"
					authorities="ROLE_CONTRIBUTOR" />
				<user name="${account.user.name}" password="${account.user.password}"
					authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<!-- This Spring Security-friendly PasswordEncoder implementation will -->
	<!-- wrap the PBEStringEncryptor instance so that it can be used from -->
	<!-- the security framework. -->
	<beans:bean id="passwordEncoder" class="org.jasypt.spring.security3.PBEPasswordEncoder">
		<beans:property name="pbeStringEncryptor">
			<beans:ref bean="jasyptPBEStringEncryptor" />
		</beans:property>
	</beans:bean>
</beans:beans>